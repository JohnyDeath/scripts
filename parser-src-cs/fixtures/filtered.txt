<summary>
Позволяет управлять процессом операционной системы. Получать текст из стандартных потоков,
проверять активность, pid, завершать процесс и т.п.
</summary>
[ContextClass("Процесс", "Process")]
<summary>
Устанавливает кодировку в которой будут считываться стандартные потоки вывода и ошибок.
</summary>
[ContextProperty("КодировкаВывода", "OutputEncoding")]
get
<summary>
Не используется. Реализован для совместимости API с 1С:Предприятие
</summary>
<returns>Неопределено</returns>
[ContextProperty("Параметры", "Parameters")]
get
set
[ContextProperty("АвтоматическийРазмер", "AutoSize")]
get
set
[ContextProperty("Имя", "Name")]
get
set
public ProcessContext(System.Diagnostics.Process p):this(p, ValueFactory.Create())
<summary>
Перемещает файл из одного расположения в другое.
</summary>
<param name="source">Имя файла-источника</param>
<param name="destination">Имя файла приемника</param>
[ContextMethod("ПереместитьФайл", "MoveFile")]
public void MoveFile(string source, string destination = "новыйпуть")
<summary>
Сравнивает строки без учета регистра.
</summary>
<param name="first">описание1</param>
<param name="second">описание2</param>
<returns>-1 первая строка больше, 1 - вторая строка больше. 0 - строки равны</returns>
[ContextMethod("СтрСравнить", "StrCompare")]
public int StrCompare(string first="один", string second)
<summary>
Подключает внешнюю сборку среды .NET (*.dll) и регистрирует классы 1Script, объявленные в этой сборке.
Публичные классы, отмеченные в dll атрибутом ContextClass, будут импортированы аналогично встроенным классам 1Script.
Загружаемая сборка должна ссылаться на сборку ScriptEngine.dll
<example>
ПодключитьВнешнююКомпоненту("C:\MyAssembly.dll");
КлассИзКомпоненты = Новый КлассИзКомпоненты(); // тип объявлен внутри компоненты
</example>
</summary>
<param name="dllPath">Путь к внешней компоненте</param>
[ContextMethod("ПодключитьВнешнююКомпоненту", "AttachAddIn")]
public void AttachAddIn(string dllPath)
<summary>
Возвращает каталог временных файлов ОС
</summary>
<returns>Строка. Путь к каталогу временных файлов</returns>
[ContextMethod("КаталогВременныхФайлов", "TempFilesDir")]
public string TempFilesDir()
<summary>
Запустить процесс на выполнение.
</summary>
[ContextMethod("Запустить", "Start")]
public void Start()
<param name="typeName">Имя типа, которое будет иметь новый класс. Экземпляры класса создаются оператором Новый.
<example>ПодключитьСценарий("C:\file.os", "МойОбъект");
А = Новый МойОбъект();</example>
</param>ddd
[ContextMethod("Уничтожить", "Dispose")]
public void Dispose(string typeName)
public static ProcessContext Create(string cmdLine, string currentDir = null, bool redirectOutput = false, bool redirectInput = false, IValue encoding = null)
public static System.Diagnostics.ProcessStartInfo PrepareProcessStartupInfo(string cmdLine, string currentDir)
