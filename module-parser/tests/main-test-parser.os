Функция ПолучитьТекстИзФайла(ИмяФайла) Экспорт
    ФайлОбмена = Новый Файл(ИмяФайла);
    Данные = "";
    Если ФайлОбмена.Существует() Тогда
        Текст = Новый ЧтениеТекста(ИмяФайла, КодировкаТекста.UTF8);
        Данные = Текст.Прочитать();
        Текст.Закрыть();
    Иначе
        ВызватьИсключение "Файл не найден: " + ИмяФайла;
    КонецЕсли;
    возврат Данные;
КонецФункции

Процедура ПолучитьМетодыСОписанием() Экспорт
    Данные = ПолучитьТекстИзФайла("module-parser/tests/module.os");
    
    РегВыражение = Новый РегулярноеВыражение("(^\s*\/\/\/[^\/](.*)|^\s*(процедура|функция|procedure|function)\s+(.*)\(((.*)|(.*)\r\n(.*))\)\s+(.*))");
    РегВыражение.ИгнорироватьРегистр = Истина;
    РегВыражение.Многострочный = Истина;

    Совпадения = РегВыражение.НайтиСовпадения(Данные);
    МассивМетодов = Новый Массив;

    Документация = Новый Структура;
    ДокПараметры = Неопределено;
    ДокВозврат = Неопределено;
    ДокОписание = "";

    Для каждого Сп Из Совпадения Цикл

        СпГр = Сп.Группы;

        СтрДок = СокрЛП(СпГр[2].Значение);

        Если СтрДок <> ""  Тогда
            ПозицияТире = СтрНайти(СтрДок,"-");

            Если СтрНачинаетсяС(СтрДок,"@param") Тогда
                Если ДокПараметры = Неопределено Тогда
                    ДокПараметры = Новый Структура;
                КонецЕсли;
                ДокПараметры.Вставить(СокрЛП(Сред(СтрДок, 7, ПозицияТире-1-7)), СокрЛП(Сред(СтрДок, ПозицияТире+1)));
            ИначеЕсли СтрНачинаетсяС(СтрДок,"@return") Тогда
                Если ДокВозврат = Неопределено Тогда
                    ДокВозврат = Новый Структура;
                КонецЕсли;
                ДокВозврат.Вставить(СокрЛП(Сред(СтрДок, 8, ПозицияТире-1-8)), СокрЛП(Сред(СтрДок, ПозицияТире+1)));
            Иначе
                ДокОписание  = ДокОписание  + СтрДок;
            КонецЕсли;

        Иначе

            СтруктураМетода = Новый Структура;
            СтруктураМетода.Вставить("Тип", СокрЛП(СпГр[3].Значение));
            СтруктураМетода.Вставить("Имя", СокрЛП(СпГр[4].Значение));

            //# Перебор параметров
            СтрПараметры = СокрЛП(СпГр[5].Значение);

            ПараметрыМетода = Новый ТаблицаЗначений;
            ПараметрыМетода.Колонки.Добавить("Имя");
            ПараметрыМетода.Колонки.Добавить("ПоЗначению");
            ПараметрыМетода.Колонки.Добавить("ЗначениеПоУмолчанию");
            ПараметрыМетода.Колонки.Добавить("Описание");

            МассивПараметры = СтрРазделить(СтрПараметры,",", Ложь);

            Для каждого Элемент Из МассивПараметры Цикл
                Элемент = СокрЛП(Элемент);
                
                ПереданПоЗначению = Ложь;
                Если СтрНачинаетсяС(Элемент, "Знач ") Тогда
                    ПереданПоЗначению = Истина;
                    Элемент = Сред(Элемент,5);
                КонецЕсли;

                РегВыражениеЗначения = новый РегулярноеВыражение("(=|\s)(?=(?:[^\""]*\""[^\""]*\"")*(?![^\""]*\""))");
                
                РегВыражениеЗамены = новый РегулярноеВыражение("(\s)(?=(?:[^\""]*\""[^\""]*\"")*(?![^\""]*\""))");
                Элемент = РегВыражениеЗамены.Заменить(Элемент,"");

                СтруктураПараметра = РегВыражениеЗначения.Разделить(Элемент);

                СтрокаТЗ = ПараметрыМетода.Добавить();
                СтрокаТЗ.Имя = СтруктураПараметра[0];
                СтрокаТЗ.ПоЗначению = ПереданПоЗначению;
                Если СтруктураПараметра.Количество() >1 Тогда
                    СтрокаТЗ.ЗначениеПоУмолчанию  = СтруктураПараметра[2];
                КонецЕсли;

                Если ДокПараметры <> Неопределено Тогда
                    Если ДокПараметры.Свойство(СтрокаТЗ.Имя) Тогда
                        СтрокаТЗ.Описание = ДокПараметры[СтрокаТЗ.Имя];
                    КонецЕсли;
                КонецЕсли;

            КонецЦикла;

            СтрокаОригинал = СокрЛП(СпГр[0].Значение);
            РегВыражение = Новый РегулярноеВыражение("\s+(Экспорт)($|\s+|\/\/)");
            РегВыражение.ИгнорироватьРегистр = Истина;            
            Совпадения = РегВыражение.НайтиСовпадения(СтрокаОригинал);

            СтруктураМетода.Вставить("Параметры", ПараметрыМетода);
            СтруктураМетода.Вставить("ВозвращаемоеЗначение", ДокВозврат);
            СтруктураМетода.Вставить("Описание", ДокОписание);
            СтруктураМетода.Вставить("Экспорт", ?(Совпадения.Количество()=0, Ложь, Истина));

            МассивМетодов.Добавить(СтруктураМетода);

            ДокПараметры = Неопределено;
            ДокВозврат = Неопределено;
            ДокОписание = "";

        КонецЕсли;
    КонецЦикла;

    Для каждого Метод Из МассивМетодов Цикл
        Сообщить("==================================");
        Сообщить("Имя: " + Метод.Имя);
        Сообщить("Экспорт: " + Метод.Экспорт);
        Сообщить("Описание: " + Метод.Описание);
        Сообщить("Параметры: ");

        Прм = Метод.Параметры;
        Для каждого СтрПрм Из Прм Цикл
            Сообщить("	" + СтрПрм.Имя + " - " + СтрПрм.Описание + " :: " + СтрПрм.ЗначениеПоУмолчанию);
        КонецЦикла;

    КонецЦикла;

КонецПроцедуры


ПолучитьМетодыСОписанием();