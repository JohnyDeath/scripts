#Использовать ".."

#Использовать asserts
#Использовать json

Перем юТест;

Процедура Инициализация()
	
КонецПроцедуры

Функция ПолучитьСписокТестов(Тестирование) Экспорт
	
	юТест = Тестирование;
	
	СписокТестов = Новый Массив;
	// СписокТестов.Добавить("Тест_Должен_ПолучитьОписаниеМодуля");
	// СписокТестов.Добавить("Тест_Должен_ПолучитьМетодыМодуля");
	СписокТестов.Добавить("Тест_Должен_ПолучитьМетодыМодуля2");
	
	Возврат СписокТестов;
	
КонецФункции

Процедура Тест_Должен_ПолучитьОписаниеМодуля() Экспорт

	Парсер = Новый ПарсерМодуля;
	Результат = Парсер.ПолучитьОписание("src/moduleparser.os");

	юТест.ПроверитьРавенство(Результат.Автор, "ret-Phoenix");
	юТест.ПроверитьРавенство(Результат.Имя, "ПарсерМодуля");
	
КонецПроцедуры

Процедура Тест_Должен_ПолучитьМетодыМодуля() Экспорт

	Парсер = Новый ПарсерМодуля;
	Результат = Парсер.ПолучитьМетодыСОписанием("src/moduleparser.os");

	// Сообщить(Результат.Количество());
	// Для каждого Метод Из Результат Цикл
	// 	Сообщить("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
	// 	Сообщить("Имя: " + Метод.Имя);
	// 	Сообщить("Тип: " + Метод.Тип);
	// 	Сообщить("Экс: " + Метод.Экспорт);
	// 	Сообщить("Описание: " + Метод.Описание);

	// 	Если Метод.Параметры = Неопределено Тогда
	// 		Сообщить("Параметры: Неопределены");
	// 	Иначе
	// 		Для каждого Параметр Из Метод.Параметры Цикл
	// 			Сообщить("Параметры: "+ Параметр.Имя + " :: " + Параметр.ПоЗначению + " :: " + Параметр.ЗначениеПоУмолчанию + " :: " + Параметр.Описание );
	// 		КонецЦикла;
	// 	КонецЕсли;

	// КонецЦикла;

	юТест.ПроверитьРавенство(Результат.Количество(), 4);
	
КонецПроцедуры

Процедура Тест_Должен_ПолучитьМетодыМодуля2() Экспорт

	Парсер = Новый ПарсерМодуля;
	Результат = Парсер.ПолучитьМетодыСОписанием("tests/module.os");

	Сообщить(Результат.Количество());
	Для каждого Метод Из Результат Цикл
		Сообщить("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
		Сообщить("Имя: " + Метод.Имя);
		Сообщить("Тип: " + Метод.Тип);
		Сообщить("Экс: " + Метод.Экспорт);
		Сообщить("Описание: " + Метод.Описание);

		Если Метод.Параметры = Неопределено Тогда
			Сообщить("Параметры: Неопределены");
		Иначе
			Для каждого Параметр Из Метод.Параметры Цикл
				Сообщить("Параметры: 0: "+ Параметр.Имя + " 1: " + Параметр.ПоЗначению + " 2: " + Параметр.ЗначениеПоУмолчанию + " 3: " + Параметр.Описание );
			КонецЦикла;
		КонецЕсли;

	КонецЦикла;

	// юТест.ПроверитьРавенство(Результат.Количество(), 4);
	
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////////
// Инициализация

Инициализация();