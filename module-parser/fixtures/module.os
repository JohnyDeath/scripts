/// Набор чего-то там.
/// Еще набор чего-то там.
/// @author ret-Phoenix
/// @version 0.0.0.1
/// @Module ИмяМодуляКласса

///
/// Описание метода
/// Еще описание метода
/// И еще одна строка с описанием метода
/// @param Параметр1 - {\link ЮТест} Описание 1 
/// @param МойЭкспорт - {\link parserV8i} Описание 2
Процедура МойМетод(Параметр1="БезПробела", МойЭкспорт) 

КонецПроцедуры

Процедура МояПроцедура2( ЭкспортМетод)
    
КонецПроцедуры

/// Описание функции
/// Еще описание функции
/// И еще одна строка с описанием функции
/// @param Параметр3 - {\link ЧистильщикБаз} Параметр функции 1
/// @param Параметр4 - {\link 1dbb} Параметр функции 2
/// @return Булево - Истина - Все хорошо
Функция МояФункция(Параметр3 = "Прм = 1", Параметр4 = "мой текст для параметра") Экспорт //моя
    Возврат Истина;
КонецФункции

Процедура ПроцБезПараметров() 
   
КонецПроцедуры

Функция ФункцияБезАннотаций() Экспорт 
   
КонецФункции

/// Записывает сообщение в журнал регистрации. 
/// Если параметр ЗаписатьСобытия = Истина, то запись выполняется сразу (обращение к серверу). 
/// Если ЗаписатьСобытия = Ложь (по умолчанию), то сообщение помещается в очередь, 
/// которая может быть записана позднее, при следующем вызове этой или другой процедуры,
/// в которую передается в качестве параметра очередь СообщенияДляЖурналаРегистрации.
Процедура ДобавитьСообщениеДляЖурналаРегистрации(Знач ИмяСобытия, Знач ПредставлениеУровня = "Информация", 
	Знач Комментарий = "", Знач ДатаСобытия = "", Знач ЗаписатьСобытия = Ложь) Экспорт
	
КонецПроцедуры

Процедура ОткрытьЖурналРегистрации(Знач Отбор = Неопределено, Владелец = Неопределено) Экспорт
	
КонецПроцедуры

Процедура ОткрытьДанныеДляПросмотра(ТекущиеДанные) Экспорт
	
КонецПроцедуры

/// Открывает форму просмотра события обработки "Журнал регистрации"
/// для отображения в ней подробных данных выбранного события.
///
/// Параметры:
///  @param Данные  - Строка таблицы значений - строка журнала регистрации.
///
Процедура ПросмотрТекущегоСобытияВОтдельномОкне(Данные) Экспорт
	
КонецПроцедуры

/// Запрашивает у пользователя ограничение периода 
/// и включает его в отбор журнала регистрации.
///
/// Параметры:
///  @param ИнтервалДат - СтандартныйПериод, интервал дат отбора.
///  @param ОтборЖурналаРегистрации - Структура, отбор журнала регистрации.
///
Процедура УстановитьИнтервалДатДляПросмотра(ИнтервалДат, ОтборЖурналаРегистрации, ОбработчикОповещения = Неопределено) Экспорт
	
КонецПроцедуры

/// Выполняет обработку выбора отдельного события в таблице событий.
///
/// Параметры:
///  @param ТекущиеДанные - Строка таблицы значений - строка журнала регистрации.
///
Процедура СобытияВыбор(ТекущиеДанные, Поле, ИнтервалДат, ОтборЖурналаРегистрации) Экспорт
	
КонецПроцедуры

///  @param ТекущиеДанные - Строка таблицы значений.
///  @param ТекущийЭлемент - Текущий элемент строки таблицы значений.
///
/// Возвращаемое значение:
///  @return Булево - Истина, если отбор установлен, Ложь - Иначе.
///
Функция УстановитьОтборПоЗначениюВТекущейКолонке(ТекущиеДанные, ТекущийЭлемент, ОтборЖурналаРегистрации, КолонкиИсключения) Экспорт
	
КонецФункции

// Только для внутреннего использования.
//
//  @return Неопределено - Парсер должен пропустить эту строку
Функция СобытиеЖурналаРегистрацииВСтруктуру(Данные)

КонецФункции